plugins {
  id 'org.springframework.boot' version '2.3.11.RELEASE'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
}

repositories {
  mavenCentral()
}

group = 'com.nimsoc.cloud'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

dependencies {

  implementation ('log4j:log4j:1.2.17')

  implementation ('org.springframework.boot:spring-boot-starter-aop')
  implementation ('org.springframework.boot:spring-boot-starter-data-jpa')
  implementation ('org.springframework.boot:spring-boot-starter-webflux')
  implementation ('org.springframework.boot:spring-boot-starter-jersey')
  implementation ('org.springframework.boot:spring-boot-starter-data-rest')
  implementation ('org.springframework.boot:spring-boot-starter-security')
  implementation ('org.springframework.boot:spring-boot-starter-websocket')
  implementation ('org.springframework.boot:spring-boot-starter-thymeleaf')

  implementation ('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')

  implementation ('org.webjars:sockjs-client:1.0.2')
  implementation ('org.webjars:stomp-websocket:2.3.3')
  implementation ('org.webjars:bootstrap:3.3.7')
  implementation ('org.webjars:jquery:3.1.0')

  runtimeOnly ('com.h2database:h2')

  testImplementation ('org.springframework.boot:spring-boot-starter-test')

  //implementation ('org.springframework.boot:spring-boot-starter-actuator')
  //implementation ('org.springframework.boot:spring-boot-starter-cloud-connectors')
  //implementation ('org.springframework.boot:spring-cloud-starter-eureka')
  //implementation ('org.springframework.boot:spring-cloud-starter-eureka-server')
  //implementation ('org.springframework.boot:spring-cloud-starter-hystrix')
  //implementation ('org.springframework.boot:spring-cloud-starter-hystrix-dashboard')
  //implementation ('org.springframework.boot:spring-cloud-starter-ribbon')
  //implementation ('org.springframework.boot:spring-cloud-starter')
  //implementation ('io.projectreactor:reactor-core')
  //implementation ('org.springframework.boot:spring-boot-starter-web-reactive')
  //implementation ('org.springframework.boot:spring-boot-starter-thymeleaf')
  //implementation ('org.springframework.boot:spring-boot-starter-web')
  //implementation ('org.springframework.boot:spring-boot-starter-webflux')
  //implementation ('org.springframework.boot:spring-boot-starter-websocket')
  //implementation ('org.springframework.boot:spring-boot-configuration-processor')
  //implementation ('org.webjars:webjars-locator')
  //testImplementation ('io.projectreactor:reactor-test')
  //testImplementation ('org.springframework.security:spring-security-test')
  /*
	implementation 'org.springframework.boot:spring-boot-starter-jersey'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
  */
}


ext {
  set('springCloudVersion', "Hoxton.SR11")
}
dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

test {
  useJUnitPlatform()
  
  testLogging {
    outputs.upToDateWhen {false}
    showStandardStreams = true
  }
}
